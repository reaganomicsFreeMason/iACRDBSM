package codegen

import (
	"iACRDBSM/db-engine/parser"
)

const bigcap = 500

var insns []ByteCodeOp

/*GenByteCode :
Walks along the AST generated by the sqlparser library
and generates bytecode that will be executed by the virtual
machine to carry out the sql command. The bytecode langauge
is defined in codegen/ops.go
*/
func GenByteCode(stmt *parser.SelectStmt) ([]ByteCodeOp, error) {
	insns := make([]ByteCodeOp, 0, bigcap)
	visitSelect(*stmt)
	return insns, nil
}

// Compile a select statement into bytecode
func visitSelect(stmt parser.SelectStmt) {
	tableNames := stmt.TableNames
	// TODO: Handle joins
	tableName := tableNames[0].TableName
	insns = append(insns, GetTableOp{tableName})
	colNames := stmt.ColNames
	for _, cname := range colNames {
		// todo: handle * which means we want all columns
		insns = append(insns, AddColumnOp{cname.ColName})
	}
}
